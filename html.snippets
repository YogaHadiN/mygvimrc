# Some useful Unicode entities
# Non-Breaking Space
snippet nbs
	&nbsp;
# ←
snippet left
	&#x2190;
# →
snippet right
	&#x2192;
# ↑
snippet up
	&#x2191;
# ↓
snippet down
	&#x2193;
# ↩
snippet return
	&#x21A9;
# ⇤
snippet backtab
	&#x21E4;
# ⇥
snippet tab
	<div>

	  <!-- Nav tabs -->
	  <ul class="nav nav-tabs" role="tablist">
		<li role="presentation" class="active"><a href="#${1}" aria-controls="${1}" role="tab" data-toggle="tab">${2}</a></li>
		<li role="presentation"><a href="#${4}" aria-controls="${4}" role="tab" data-toggle="tab">${5}</a></li>
	  </ul>

	  <!-- Tab panes -->
	  <div class="tab-content">
		<div role="tabpanel" class="tab-pane active" id="${1}">${3}</div>
		<div role="tabpanel" class="tab-pane" id="${4}">${6}</div>
	  </div>

	</div>
# ⇧
snippet shift
	&#x21E7;
# ⌃
snippet ctrl
	&#x2303;
# ⌅
snippet enter
	&#x2305;
# ⌘
snippet cmd
	&#x2318;
# ⌥
snippet option
	&#x2325;
# ⌦
snippet delete
	&#x2326;
# ⌫
snippet backspace
	&#x232B;
# ⎋
snippet esc
	&#x238B;
# comment
snippet //
	<!-- ${1} -->${0}
# Generic Doctype
snippet doctype HTML 4.01 Strict
	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
	"http://www.w3.org/TR/html4/strict.dtd">
snippet doctype HTML 4.01 Transitional
	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
	"http://www.w3.org/TR/html4/loose.dtd">
snippet doctype HTML 5
	<!DOCTYPE HTML>
snippet doctype XHTML 1.0 Frameset
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
snippet doctype XHTML 1.0 Strict
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
snippet doctype XHTML 1.0 Transitional
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
snippet doctype XHTML 1.1
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
	"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
# HTML Doctype 4.01 Strict
snippet docts
	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
	"http://www.w3.org/TR/html4/strict.dtd">
# HTML Doctype 4.01 Transitional
snippet doct
	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
	"http://www.w3.org/TR/html4/loose.dtd">
# HTML Doctype 5
snippet doct5
	<!DOCTYPE HTML>
# XHTML Doctype 1.0 Frameset
snippet docxf
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
# XHTML Doctype 1.0 Strict
snippet docxs
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
# XHTML Doctype 1.0 Transitional
snippet docxt
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
# XHTML Doctype 1.1
snippet docx
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
	"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
# Attributes
snippet attr
	${1:attribute}="${0:property}"
snippet attr+
	${1:attribute}="${2:property}" attr+
snippet .
	class="${1}"
snippet #
	id="${1}"
snippet alt
	alt="${1}"
snippet charset
	charset="${1:utf-8}"
snippet data
	data-${1}="${2:$1}"
snippet height
	height="${1}"
snippet href
	href="${1:#}"
snippet lang
	lang="${1:en}"
snippet media
	media="${1}"
snippet name
	name="${1}"
snippet rel
	rel="${1}"
snippet scope
	scope="${1:row}"
snippet src
	src="${1}"
snippet title=
	title="${1}"
snippet type
	type="${1}"
snippet value
	value="${1}"
snippet width
	width="${1}"
# Elements
snippet a
	<a href="${1:#}">${0:$1}</a>
snippet a.
	<a class="${1}" href="${2:#}">${0:$1}</a>
snippet a#
	<a id="${1}" href="${2:#}">${0:$1}</a>
snippet a:ext
	<a href="http://${1:example.com}">${0:$1}</a>
snippet a:mail
	<a href="mailto:${1:joe@example.com}?subject=${2:feedback}">${0:email me}</a>
snippet ac
	<a href="`@+`">${0:`@+`}</a>
snippet abbr
	<abbr title="${1}">${0}</abbr>
snippet address
	<address>
		${0}
	</address>
snippet area
	<area shape="${1:rect}" coords="${2}" href="${3}" alt="${0}" />
snippet area+
	<area shape="${1:rect}" coords="${2}" href="${3}" alt="${4}" />
	area+
snippet area:c
	<area shape="circle" coords="${1}" href="${2}" alt="${0}" />
snippet area:d
	<area shape="default" coords="${1}" href="${2}" alt="${0}" />
snippet area:p
	<area shape="poly" coords="${1}" href="${2}" alt="${0}" />
snippet area:r
	<area shape="rect" coords="${1}" href="${2}" alt="${0}" />
snippet article
	<article>
		${0}
	</article>
snippet article.
	<article class="${1}">
		${0}
	</article>
snippet article#
	<article id="${1}">
		${0}
	</article>
snippet aside
	<aside>
		${0}
	</aside>
snippet aside.
	<aside class="${1}">
		${0}
	</aside>
snippet aside#
	<aside id="${1}">
		${0}
	</aside>
snippet audio
	<audio src="${1}>${0}</audio>
snippet b
	<b>${0}</b>
snippet base
	<base href="${1}" target="${0}" />
snippet bdi
	<bdi>${0}</bdo>
snippet bdo
	<bdo dir="${1}">${0}</bdo>
snippet bdo:l
	<bdo dir="ltr">${0}</bdo>
snippet bdo:r
	<bdo dir="rtl">${0}</bdo>
snippet blockquote
	<blockquote>
		${0}
	</blockquote>
snippet body
	<body>
		${0}
	</body>
snippet br
	<br />
snippet button
	<button type="${1:submit}">${0}</button>
snippet button.
	<button class="${1:button}" type="${2:submit}">${0}</button>
snippet button#
	<button id="${1}" type="${2:submit}">${0}</button>
snippet button:s
	<button type="submit">${0}</button>
snippet button:r
	<button type="reset">${0}</button>
snippet canvas
	<canvas>
		${0}
	</canvas>
snippet caption
	<caption>${0}</caption>
snippet cite
	<cite>${0}</cite>
snippet code
	<code>${0}</code>
snippet col
	<col />
snippet col+
	<col />
	col+
snippet colgroup
	<colgroup>
		${0}
	</colgroup>
snippet colgroup+
	<colgroup>
		<col />
		col+${0}
	</colgroup>
snippet command
	<command type="command" label="${1}" icon="${0}">
snippet command:c
	<command type="checkbox" label="${1}" icon="${0}">
snippet command:r
	<command type="radio" radiogroup="${1}" label="${2}" icon="${0}">
snippet datagrid
	<datagrid>
		${0}
	</datagrid>
snippet datalist
	<datalist>
		${0}
	</datalist>
snippet datatemplate
	<datatemplate>
		${0}
	</datatemplate>
snippet dd
	<dd>${0}</dd>
snippet dd.
	<dd class="${1}">${0}</dd>
snippet dd#
	<dd id="${1}">${0}</dd>
snippet del
	<del>${0}</del>
snippet details
	<details>${0}</details>
snippet dfn
	<dfn>${0}</dfn>
snippet dialog
	<dialog>
		${0}
	</dialog>
snippet div
	<div>
		${0}
	</div>
snippet div.
	<div class="${1}">
		${0}
	</div>
snippet div#
	<div id="${1}">
		${0}
	</div>
snippet dl
	<dl>
		${0}
	</dl>
snippet dl.
	<dl class="${1}">
		${0}
	</dl>
snippet dl#
	<dl id="${1}">
		${0}
	</dl>
snippet dl+
	<dl>
		<dt>${1}</dt>
		<dd>${2}</dd>
		dt+${0}
	</dl>
snippet dt
	<dt>${0}</dt>
snippet dt.
	<dt class="${1}">${0}</dt>
snippet dt#
	<dt id="${1}">${0}</dt>
snippet dt+
	<dt>${1}</dt>
	<dd>${2}</dd>
	dt+${0}
snippet em
	<em>${0}</em>
snippet embed
	<embed src="${1}" type="${0}" />
snippet fieldset
	<fieldset>
		${0}
	</fieldset>
snippet fieldset.
	<fieldset class="${1}">
		${0}
	</fieldset>
snippet fieldset#
	<fieldset id="${1}">
		${0}
	</fieldset>
snippet fieldset+
	<fieldset>
		<legend><span>${1}</span></legend>
		${2}
	</fieldset>
	fieldset+${0}
snippet figcaption
	<figcaption>${0}</figcaption>
snippet figure
	<figure>${0}</figure>
snippet figure#
	<figure id="${1}">
		${0}
	</figure>
snippet figure.
	<figure class="${1}">
		${0}
	</figure>
snippet footer
	<footer>
		${0}
	</footer>
snippet footer.
	<footer class="${1}">
		${0}
	</footer>
snippet footer#
	<footer id="${1}">
		${0}
	</footer>
snippet form
	<form action="${1}" method="${2:post}">
		${0}
	</form>
snippet form.
	<form class="${1}" action="${2}" method="${3:post}">
		${0}
	</form>
snippet form#
	<form id="${1}" action="${2}" method="${3:post}">
		${0}
	</form>
snippet h1
	<h1>${0}</h1>
snippet h1.
	<h1 class="${1}">${0}</h1>
snippet h1#
	<h1 id="${1}">${0}</h1>
snippet h2
	<h2>${0}</h2>
snippet h2.
	<h2 class="${1}">${0}</h2>
snippet h2#
	<h2 id="${1}">${0}</h2>
snippet h3
	<h3>${0}</h3>
snippet h3.
	<h3 class="${1}">${0}</h3>
snippet h3#
	<h3 id="${1}">${0}</h3>
snippet h4
	<h4>${0}</h4>
snippet h4.
	<h4 class="${1}">${0}</h4>
snippet h4#
	<h4 id="${1}">${0}</h4>
snippet h5
	<h5>${0}</h5>
snippet h5.
	<h5 class="${1}">${0}</h5>
snippet h5#
	<h5 id="${1}">${0}</h5>
snippet h6
	<h6>${0}</h6>
snippet h6.
	<h6 class="${1}">${0}</h6>
snippet h6#
	<h6 id="${1}">${0}</h6>
snippet head
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />

		<title>${1:`substitute(vim_snippets#Filename('', 'Page Title'), '^.', '\u&', '')`}</title>
		${0}
	</head>
snippet header
	<header>
		${0}
	</header>
snippet header.
	<header class="${1}">
		${0}
	</header>
snippet header#
	<header id="${1}">
		${0}
	</header>
snippet hgroup
	<hgroup>
		${0}
	</hgroup>
snippet hgroup.
	<hgroup class="${1}>
		${0}
	</hgroup>
snippet hr
	<hr />
snippet html
	<html>
	${0}
	</html>
snippet xhtml
	<html xmlns="http://www.w3.org/1999/xhtml">
	${0}
	</html>
snippet html5
	<!DOCTYPE html>
	<html>
		<head>
			<meta charset="utf-8" />
			<meta name="viewport" content="width=device-width" />
			<title>${1:`substitute(vim_snippets#Filename('', 'Page Title'), '^.', '\u&', '')`}</title>
			${2:link}
		</head>
		<body>
			${0:body}
		</body>
	</html>
snippet html5l
	<!DOCTYPE html>
	<html lang="${1:es}">
		<head>
			<meta charset="utf-8" />
			<meta name="viewport" content="width=device-width" />
			<title>${2:`substitute(vim_snippets#Filename('', 'Page Title'), '^.', '\u&', '')`}</title>
			${3:link}
		</head>
		<body>
			${0:body}
		</body>
	</html>
snippet i
	<i>${0}</i>
snippet iframe
	<iframe src="${1}" frameborder="0"></iframe>
snippet iframe.
	<iframe class="${1}" src="${2}" frameborder="0"></iframe>
snippet iframe#
	<iframe id="${1}" src="${2}" frameborder="0"></iframe>
snippet img
	<img src="${1}" alt="${2}" />
snippet img.
	<img class="${1}" src="${2}" alt="${3}" />
snippet img#
	<img id="${1}" src="${2}" alt="${3}" />
snippet input
	<input type="${1:text/submit/hidden/button/image}" name="${2}" id="${3:$2}" value="${4}" />
snippet input.
	<input class="${1}" type="${2:text/submit/hidden/button/image}" name="${3}" id="${4:$3}" value="${5}" />
snippet input:text
	<input type="text" name="${1}" id="${2:$1}" value="${3}" />
snippet input:submit
	<input type="submit" name="${1}" id="${2:$1}" value="${3}" />
snippet input:hidden
	<input type="hidden" name="${1}" id="${2:$1}" value="${3}" />
snippet input:button
	<input type="button" name="${1}" id="${2:$1}" value="${3}" />
snippet input:image
	<input type="image" name="${1}" id="${2:$1}" src="${3}" alt="${4}" />
snippet input:checkbox
	<input type="checkbox" name="${1}" id="${2:$1}" />
snippet input:radio
	<input type="radio" name="${1}" id="${2:$1}" />
snippet input:color
	<input type="color" name="${1}" id="${2:$1}" value="${3}" />
snippet input:date
	<input type="date" name="${1}" id="${2:$1}" value="${3}" />
snippet input:datetime
	<input type="datetime" name="${1}" id="${2:$1}" value="${3}" />
snippet input:datetime-local
	<input type="datetime-local" name="${1}" id="${2:$1}" value="${3}" />
snippet input:email
	<input type="email" name="${1}" id="${2:$1}" value="${3}" />
snippet input:file
	<input type="file" name="${1}" id="${2:$1}" value="${3}" />
snippet input:month
	<input type="month" name="${1}" id="${2:$1}" value="${3}" />
snippet input:number
	<input type="number" name="${1}" id="${2:$1}" value="${3}" />
snippet input:password
	<input type="password" name="${1}" id="${2:$1}" value="${3}" />
snippet input:range
	<input type="range" name="${1}" id="${2:$1}" value="${3}" />
snippet input:reset
	<input type="reset" name="${1}" id="${2:$1}" value="${3}" />
snippet input:search
	<input type="search" name="${1}" id="${2:$1}" value="${3}" />
snippet input:time
	<input type="time" name="${1}" id="${2:$1}" value="${3}" />
snippet input:url
	<input type="url" name="${1}" id="${2:$1}" value="${3}" />
snippet input:week
	<input type="week" name="${1}" id="${2:$1}" value="${3}" />
snippet ins
	<ins>${0}</ins>
snippet kbd
	<kbd>${0}</kbd>
snippet label
	<label for="${0:$1}">${1}</label>
snippet label:i
	<label for="${2:$1}">${1}</label>
	<input type="${3:text/submit/hidden/button}" name="${4:$2}" id="${5:$2}" value="${6}" />
snippet label:s
	<label for="${2:$1}">${1}</label>
	<select name="${3:$2}" id="${4:$2}">
		<option value="${5}">${0:$5}</option>
	</select>
snippet legend
	<legend>${0}</legend>
snippet legend+
	<legend><span>${0}</span></legend>
snippet li
	<li>${0}</li>
snippet li.
	<li class="${1}">${0}</li>
snippet li+
	<li>${1}</li>
	li+
snippet lia
	<li><a href="${0:#}">${1}</a></li>
snippet lia+
	<li><a href="${2:#}">${1}</a></li>
	lia+
snippet link
	<link rel="${1}" href="${2}" title="${3}" type="${4}" />
snippet link:atom
	<link rel="alternate" href="${1:atom.xml}" title="Atom" type="application/atom+xml" />
snippet link:s
	<link rel="stylesheet" href="${1:style.css}" />
snippet link:css
	<link rel="stylesheet" href="${1:style.css}" type="text/css" media="${2:all}" />
snippet link:favicon
	<link rel="shortcut icon" href="${1:favicon.ico}" type="image/x-icon" />
snippet link:rss
	<link rel="alternate" href="${1:rss.xml}" title="RSS" type="application/atom+xml" />
snippet link:touch
	<link rel="apple-touch-icon" href="${1:favicon.png}" />
snippet main
	<main role="main">
		${0}
	</main>
snippet map
	<map name="${1}">
		${0}
	</map>
snippet map.
	<map class="${1}" name="${2}">
		${0}
	</map>
snippet map#
	<map name="${1}" id="${2:$1}>
		${0}
	</map>
snippet map+
	<map name="${1}">
		<area shape="${2}" coords="${3}" href="${4}" alt="${5}" />${6}
	</map>
snippet mark
	<mark>${0}</mark>
snippet menu
	<menu>
		${0}
	</menu>
snippet menu:c
	<menu type="context">
		${0}
	</menu>
snippet menu:t
	<menu type="toolbar">
		${0}
	</menu>
snippet meta
	<meta http-equiv="${1}" content="${2}" />
snippet meta:s
	<meta ${0} />
snippet meta:d
	<meta name="description" content="${0}" />
snippet meta:compat
	<meta http-equiv="X-UA-Compatible" content="IE=${1:7,8,edge}" />
snippet meta:refresh
	<meta http-equiv="refresh" content="text/html;charset=UTF-8" />
snippet meta:utf
	<meta http-equiv="content-type" content="text/html;charset=UTF-8" />
snippet meter
	<meter>${0}</meter>
snippet nav
	<nav>
		${0}
	</nav>
snippet nav.
	<nav class="${1}">
		${0}
	</nav>
snippet nav#
	<nav id="${1}">
		${0}
	</nav>
snippet noscript
	<noscript>
		${0}
	</noscript>
snippet object
	<object data="${1}" type="${2}">
		${3}
	</object>
# Embed QT Movie
snippet movie
	<object width="$2" height="$3" classid="clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B"
	codebase="http://www.apple.com/qtactivex/qtplugin.cab">
		<param name="src" value="$1" />
		<param name="controller" value="$4" />
		<param name="autoplay" value="$5" />
		<embed src="${1:movie.mov}"
			width="${2:320}" height="${3:240}"
			controller="${4:true}" autoplay="${5:true}"
			scale="tofit" cache="true"
			pluginspage="http://www.apple.com/quicktime/download/" />
	</object>
snippet ol
	<ol>
		${0}
	</ol>
snippet ol.
	<ol class="${1}">
		${0}
	</ol>
snippet ol#
	<ol id="${1}">
		${0}
	</ol>
snippet ol+
	<ol>
		<li>${1}</li>
		li+${0}
	</ol>
snippet opt
	<option value="${1}">${0:$1}</option>
snippet opt+
	<option value="${1}">${2:$1}</option>
	opt+${0}
snippet optt
	<option>${0}</option>
snippet optgroup
	<optgroup>
		<option value="${1}">${2:$1}</option>
		opt+${0}
	</optgroup>
snippet output
	<output>${0}</output>
snippet p
	<p>${0}</p>
snippet p.
	<p class="${1}">${0}</p>
snippet p#
	<p id="${1}">${0}</p>
snippet param
	<param name="${1}" value="${2}" />
snippet pre
	<pre>
		${0}
	</pre>
snippet progress
	<progress>${0}</progress>
snippet q
	<q>${0}</q>
snippet rp
	<rp>${0}</rp>
snippet rt
	<rt>${0}</rt>
snippet ruby
	<ruby>
		<rp><rt>${0}</rt></rp>
	</ruby>
snippet s
	<s>${0}</s>
snippet samp
	<samp>
		${0}
	</samp>
snippet script
	<script type="text/javascript" charset="utf-8">
		${0}
	</script>
snippet scripts
	<script src="${0}.js"></script>
snippet scriptt
	<script type="${1}" id="${2}">
		${0}
	</script>
snippet scriptsrc
	<script src="${0}.js" type="text/javascript" charset="utf-8"></script>
snippet section
	<section>
		${0}
	</section>
snippet section.
	<section class="${1}">
		${0}
	</section>
snippet section#
	<section id="${1}">
		${0}
	</section>
snippet select
	<select name="${1}" id="${2:$1}">
		${0}
	</select>
snippet select.
	<select name="${1}" id="${2:$1}" class="${3}>
		${0}
	</select>
snippet select+
	<select name="${1}" id="${2:$1}">
		<option value="${3}">${4:$3}</option>
		opt+${0}
	</select>
snippet small
	<small>${0}</small>
snippet source
	<source src="${1}" type="${2}" media="${0}" />
snippet span
	<span>${0}</span>
snippet span.
	<span class="${1}">${0}</span>
snippet span#
	<span id="${1}">${0}</span>
snippet strong
	<strong>${0}</strong>
snippet style
	<style type="text/css" media="${1:all}">
		${0}
	</style>
snippet sub
	<sub>${0}</sub>
snippet summary
	<summary>
		${0}
	</summary>
snippet sup
	<sup>${0}</sup>
snippet table
	<table>
		${0}
	</table>
snippet table.
	<table class="${1}">
		${0}
	</table>
snippet table#
	<table id="${1}">
		${0}
	</table>
snippet tbody
	<tbody>
		${0}
	</tbody>
snippet td
	<td>${0}</td>
snippet td.
	<td class="${1}">${0}</td>
snippet td#
	<td id="${1}">${0}</td>
snippet td+
	<td>${1}</td>
	td+${0}
snippet textarea
	<textarea name="${1}" id="${2:$1}" rows="${3:8}" cols="${4:40}">${5}</textarea>
snippet tfoot
	<tfoot>
		${0}
	</tfoot>
snippet th
	<th>${0}</th>
snippet th.
	<th class="${1}">${0}</th>
snippet th#
	<th id="${1}">${0}</th>
snippet th+
	<th>${1}</th>
	th+${0}
snippet thead
	<thead>
		${0}
	</thead>
snippet time
	<time datetime="${1}" pubdate="${2:$1}">${0:$1}</time>
snippet title
	<title>${0:`substitute(vim_snippets#Filename('', 'Page Title'), '^.', '\u&', '')`}</title>
snippet tr
	<tr>
		${0}
	</tr>
snippet tr+
	<tr>
		<td>${1}</td>
		td+${0}
	</tr>
snippet track
	<track src="${1}" srclang="${2}" label="${3}" default="${4:default} />${5}
snippet ul
	<ul>
		${0}
	</ul>
snippet ul.
	<ul class="${1}">
		${0}
	</ul>
snippet ul#
	<ul id="${1}">
		${0}
	</ul>
snippet ul+
	<ul>
		<li>${1}</li>
		li+${0}
	</ul>
snippet var
	<var>${0}</var>
snippet video
	<video src="${1} height="${2}" width="${3}" preload="${5:none}" autoplay="${6:autoplay}>${7}</video>
snippet wbr
	<wbr />
snippet laratable
	<div class="table-responsive">
		<table class="table table-hover table-condensed">
			<thead>
				<tr>
					<th>${1}</th>
				</tr>
			</thead>
			<tbody>
				@if($${2}->count() > 0)
					@foreach($$2 as $${3})
						<tr>
							<td>{{ $$3->${4} }}</td>
						</tr>
					@endforeach
				@else
					<tr>
						<td class="text-center" colspan="">Tidak Ada Data Untuk Ditampilkan :p</td>
					</tr>
				@endif
			</tbody>
		</table>
	</div>
	${5}
snippet form-group
	<div class="form-group" @if($errors->has('$1')) class="has-error" @endif>
	  {!! Form::label('${1}', '${2}') !!}
	  {!! Form::${3:text}('$1' ${4}, ${5:null}, ['class' => 'form-control${6}']) !!}
	  @if($errors->has('$1'))<code>{{ $errors->first('$1') }}</code>@endif
	</div>${7}
snippet this
	$(${1:this}).${2:val}(${3})${4:;}
snippet if
	if(${1}){
		${2}
	}${3}
snippet add
	${1:obj}.add('${2:selector expression}')
snippet addClass
	${1:obj}.addClass('${2:class name}')
snippet after
	${1:obj}.after('${2:Some text <b>and bold!</b>}')
snippet ajax
	$.ajax({
		url: '${1:mydomain.com/url}',
		type: '${2:POST}',
		dataType: '${3:xml/html/script/json}',
		data: $.param( $('${4:Element or Expression}') ),
		complete: function (jqXHR, textStatus) {
			${5:// callback}
		},
		success: function (data, textStatus, jqXHR) {
			${6:// success callback}
		},
		error: function (jqXHR, textStatus, errorThrown) {
			${0:// error callback}
		}
	});
snippet ajaxcomplete
	${1:obj}.ajaxComplete(function (${1:e}, xhr, settings) {
		${0:// callback}
	});
snippet ajaxerror
	${1:obj}.ajaxError(function (${1:e}, xhr, settings, thrownError) {
		${2:// error callback}
	});
	${0}
snippet ajaxget
	$.get('${1:mydomain.com/url}',
		${2:{ param1: value1 },}
		function (data, textStatus, jqXHR) {
			${0:// success callback}
		}
	);
snippet ajaxpost
	$.post('${1:mydomain.com/url}',
		${2:{ param1: value1 },}
		function (data, textStatus, jqXHR) {
			${0:// success callback}
		}
	);
snippet ajaxprefilter
	$.ajaxPrefilter(function (${1:options}, ${2:originalOptions}, jqXHR) {
		${0: // Modify options, control originalOptions, store jqXHR, etc}
	});
snippet ajaxsend
	${1:obj}.ajaxSend(function (${1:request, settings}) {
		${2:// error callback}
	});
	${0}
snippet ajaxsetup
	$.ajaxSetup({
		url: "${1:mydomain.com/url}",
		type: "${2:POST}",
		dataType: "${3:xml/html/script/json}",
		data: $.param( $("${4:Element or Expression}") ),
		complete: function (jqXHR, textStatus) {
			${5:// callback}
		},
		success: function (data, textStatus, jqXHR) {
			${6:// success callback}
		},
		error: function (jqXHR, textStatus, errorThrown) {
			${0:// error callback}
		}
	});
snippet ajaxstart
	$.ajaxStart(function () {
		${1:// handler for when an AJAX call is started and no other AJAX calls are in progress};
	});
	${0}
snippet ajaxstop
	$.ajaxStop(function () {
		${1:// handler for when all AJAX calls have been completed};
	});
	${0}
snippet ajaxsuccess
	$.ajaxSuccess(function (${1:e}, xhr, settings) {
		${2:// handler for when any AJAX call is successfully completed};
	});
	${0}
snippet andself
	${1:obj}.andSelf()
snippet animate
	${1:obj}.animate({${2:param1: value1, param2: value2}}, ${3:speed})
snippet append
	${1:obj}.append('${2:Some text <b>and bold!</b>}')
snippet appendTo
	${1:obj}.appendTo('${2:selector expression}')
snippet attr
	${1:obj}.attr('${2:attribute}', '${3:value}')
snippet attrm
	${1:obj}.attr({'${2:attr1}': '${3:value1}', '${4:attr2}': '${5:value2}'})
snippet before
	${1:obj}.before('${2:Some text <b>and bold!</b>}')
snippet bind
	${1:obj}.bind('${2:event name}', function (${3:e}) {
		${0:// event handler}
	});
snippet blur
	${1:obj}.blur(function (${2:e}) {
		${0:// event handler}
	});
snippet C
	$.Callbacks()
snippet Cadd
	${1:callbacks}.add(${2:callbacks})
snippet Cdis
	${1:callbacks}.disable()
snippet Cempty
	${1:callbacks}.empty()
snippet Cfire
	${1:callbacks}.fire(${2:args})
snippet Cfired
	${1:callbacks}.fired()
snippet Cfirew
	${1:callbacks}.fireWith(${2:this}, ${3:args})
snippet Chas
	${1:callbacks}.has(${2:callback})
snippet Clock
	${1:callbacks}.lock()
snippet Clocked
	${1:callbacks}.locked()
snippet Crem
	${1:callbacks}.remove(${2:callbacks})
snippet change
	${1:obj}.change(function (${2:e}) {
		${0:// event handler}
	});
snippet children
	${1:obj}.children('${2:selector expression}')
snippet clearq
	${1:obj}.clearQueue(${2:'queue name'})
snippet click
	${1:obj}.click(function (${2:e}) {
		${0:// event handler}
	});
snippet clone
	${1:obj}.clone()
snippet contains
	$.contains(${1:container}, ${0:contents});
snippet css
	${1:obj}.css('${2:attribute}', '${3:value}')
snippet csshooks
	$.cssHooks['${1:CSS prop}'] = {
		get: function (elem, computed, extra) {
			${2: // handle getting the CSS property}
		},
		set: function (elem, value) {
			${0: // handle setting the CSS value}
		}
	};
snippet cssm
	${1:obj}.css({${2:attribute1}: '${3:value1}', ${4:attribute2}: '${5:value2}'})
snippet D
	$.Deferred()
snippet Dalways
	${1:deferred}.always(${2:callbacks})
snippet Ddone
	${1:deferred}.done(${2:callbacks})
snippet Dfail
	${1:deferred}.fail(${2:callbacks})
snippet Disrej
	${1:deferred}.isRejected()
snippet Disres
	${1:deferred}.isResolved()
snippet Dnotify
	${1:deferred}.notify(${2:args})
snippet Dnotifyw
	${1:deferred}.notifyWith(${2:this}, ${3:args})
snippet Dpipe
	${1:deferred}.then(${2:doneFilter}, ${3:failFilter}, ${4:progressFilter})
snippet Dprog
	${1:deferred}.progress(${2:callbacks})
snippet Dprom
	${1:deferred}.promise(${2:target})
snippet Drej
	${1:deferred}.reject(${2:args})
snippet Drejw
	${1:deferred}.rejectWith(${2:this}, ${3:args})
snippet Dres
	${1:deferred}.resolve(${2:args})
snippet Dresw
	${1:deferred}.resolveWith(${2:this}, ${3:args})
snippet Dstate
	${1:deferred}.state()
snippet Dthen
	${1:deferred}.then(${2:doneCallbacks}, ${3:failCallbacks}, ${4:progressCallbacks})
snippet Dwhen
	$.when(${1:deferreds})
snippet data
	${1:obj}.data(${2:obj})
snippet dataa
	$.data('${1:selector expression}', '${2:key}'${3:, 'value'})
snippet dblclick
	${1:obj}.dblclick(function (${2:e}) {
		${0:// event handler}
	});
snippet delay
	${1:obj}.delay('${2:slow/400/fast}'${3:, 'queue name'})
snippet dele
	${1:obj}.delegate('${2:selector expression}', '${3:event name}', function (${4:e}) {
		${0:// event handler}
	});
snippet deq
	${1:obj}.dequeue(${2:'queue name'})
snippet deqq
	$.dequeue('${1:selector expression}'${2:, 'queue name'})
snippet detach
	${1:obj}.detach('${2:selector expression}')
snippet die
	${1:obj}.die(${2:event}, ${3:handler})
snippet each
	${1:obj}.each(function (index) {
		${0:this.innerHTML = this + " is the element, " + index + " is the position";}
	});
snippet el
	$('<${1}/>'${2:, {}})
snippet eltrim
	$.trim('${1:string}')
snippet empty
	${1:obj}.empty()
snippet end
	${1:obj}.end()
snippet eq
	${1:obj}.eq(${2:element index})
snippet error
	${1:obj}.error(function (${2:e}) {
		${0:// event handler}
	});
snippet eventsmap
	{
		:f${0}
	}
snippet extend
	$.extend(${1:true, }${2:target}, ${3:obj})
snippet fadein
	${1:obj}.fadeIn('${2:slow/400/fast}')
snippet fadeinc
	${1:obj}.fadeIn('slow/400/fast', function () {
		${0:// callback};
	});
snippet fadeout
	${1:obj}.fadeOut('${2:slow/400/fast}')
snippet fadeoutc
	${1:obj}.fadeOut('slow/400/fast', function () {
		${0:// callback};
	});
snippet fadeto
	${1:obj}.fadeTo('${2:slow/400/fast}', ${3:0.5})
snippet fadetoc
	${1:obj}.fadeTo('slow/400/fast', ${2:0.5}, function () {
		${0:// callback};
	});
snippet filter
	${1:obj}.filter('${2:selector expression}')
snippet filtert
	${1:obj}.filter(function (${2:index}) {
		${3}
	})
snippet find
	${1:obj}.find('${2:selector expression}')
snippet focus
	${1:obj}.focus(function (${2:e}) {
		${0:// event handler}
	});
snippet focusin
	${1:obj}.focusIn(function (${2:e}) {
		${0:// event handler}
	});
snippet focusout
	${1:obj}.focusOut(function (${2:e}) {
		${0:// event handler}
	});

snippet get
	${1:obj}.get(${2:element index})
snippet getjson
	$.getJSON('${1:mydomain.com/url}',
		${2:{ param1: value1 },}
		function (data, textStatus, jqXHR) {
			${0:// success callback}
		}
	);
snippet getscript
	$.getScript('${1:mydomain.com/url}', function (script, textStatus, jqXHR) {
		${0:// callback}
	});
snippet grep
	$.grep(${1:array}, function (item, index) {
		${2}
	}${0:, true});
snippet hasc
	${1:obj}.hasClass('${2:className}')
snippet hasd
	$.hasData('${0:selector expression}');
snippet height
	${1:obj}.height(${2:integer})
snippet hide
	${1:obj}.hide('${2:slow/400/fast}')
snippet hidec
	${1:obj}.hide('${2:slow/400/fast}', function () {
		${0:// callback}
	});
snippet hover
	${1:obj}.hover(function (${2:e}) {
		${3:// event handler}
	}, function ($2) {
		${4:// event handler}
	});
snippet html
	${1:obj}.html('${2:Some text <b>and bold!</b>}')
snippet inarr
	$.inArray(${1:value}, ${0:array});
snippet insa
	${1:obj}.insertAfter('${2:selector expression}')
snippet insb
	${1:obj}.insertBefore('${2:selector expression}')
snippet is
	${1:obj}.is('${2:selector expression}')
snippet isarr
	$.isArray(${1:obj})
snippet isempty
	$.isEmptyObject(${1:obj})
snippet isfunc
	$.isFunction(${1:obj})
snippet isnum
	$.isNumeric(${1:value})
snippet isobj
	$.isPlainObject(${1:obj})
snippet iswin
	$.isWindow(${1:obj})
snippet isxml
	$.isXMLDoc(${1:node})
snippet jj
	$('${1:selector}')
snippet kdown
	${1:obj}.keydown(function (${2:e}) {
		${0:// event handler}
	});
snippet kpress
	${1:obj}.keypress(function (${2:e}) {
		${0:// event handler}
	});
snippet kup
	${1:obj}.keyup(function (${2:e}) {
		${0:// event handler}
	});
snippet last
	${1:obj}.last('${1:selector expression}')
snippet live
	${1:obj}.live('${2:events}', function (${3:e}) {
		${0:// event handler}
	});
snippet load
	${1:obj}.load(function (${2:e}) {
		${0:// event handler}
	});
snippet loadf
	${1:obj}.load('${2:mydomain.com/url}',
		${2:{ param1: value1 },}
		function (responseText, textStatus, xhr) {
			${0:// success callback}
		}
	});
snippet makearray
	$.makeArray(${0:obj});
snippet map
	${1:obj}.map(function (${2:index}, ${3:element}) {
		${0:// callback}
	});
snippet mapp
	$.map(${1:arrayOrObject}, function (${2:value}, ${3:indexOrKey}) {
		${0:// callback}
	});
snippet merge
	$.merge(${1:target}, ${0:original});
snippet mdown
	${1:obj}.mousedown(function (${2:e}) {
		${0:// event handler}
	});
snippet menter
	${1:obj}.mouseenter(function (${2:e}) {
		${0:// event handler}
	});
snippet mleave
	${1:obj}.mouseleave(function (${2:e}) {
		${0:// event handler}
	});
snippet mmove
	${1:obj}.mousemove(function (${2:e}) {
		${0:// event handler}
	});
snippet mout
	${1:obj}.mouseout(function (${2:e}) {
		${0:// event handler}
	});
snippet mover
	${1:obj}.mouseover(function (${2:e}) {
		${0:// event handler}
	});
snippet mup
	${1:obj}.mouseup(function (${2:e}) {
		${0:// event handler}
	});
snippet next
	${1:obj}.next('${2:selector expression}')
snippet nexta
	${1:obj}.nextAll('${2:selector expression}')
snippet nextu
	${1:obj}.nextUntil('${2:selector expression}'${3:, 'filter expression'})
snippet not
	${1:obj}.not('${2:selector expression}')
snippet off
	${1:obj}.off('${2:events}', '${3:selector expression}'${4:, handler})
snippet offset
	${1:obj}.offset()
snippet offsetp
	${1:obj}.offsetParent()
snippet on
	${1:obj}.on('${2:events}', '${3:selector expression}', function (${4:e}) {
		${0:// event handler}
	});
snippet one
	${1:obj}.one('${2:event name}', function (${3:e}) {
		${0:// event handler}
	});
snippet outerh
	${1:obj}.outerHeight()
snippet outerw
	${1:obj}.outerWidth()
snippet param
	$.param(${1:obj})
snippet parent
	${1:obj}.parent('${2:selector expression}')
snippet parents
	${1:obj}.parents('${2:selector expression}')
snippet parentsu
	${1:obj}.parentsUntil('${2:selector expression}'${3:, 'filter expression'})
snippet parse
	$.parseJSON(${1:data})
snippet pos
	${1:obj}.position()
snippet prepend
	${1:obj}.prepend('${2:Some text <b>and bold!</b>}')
snippet prependto
	${1:obj}.prependTo('${2:selector expression}')
snippet prev
	${1:obj}.prev('${2:selector expression}')
snippet preva
	${1:obj}.prevAll('${2:selector expression}')
snippet prevu
	${1:obj}.prevUntil('${2:selector expression}'${3:, 'filter expression'})
snippet promise
	${1:obj}.promise(${2:'fx'}, ${3:target})
snippet prop
	${1:obj}.prop('${2:property name}')
snippet proxy
	$.proxy(${1:function}, ${2:this})
snippet pushstack
	${1:obj}.pushStack(${2:elements})
snippet queue
	${1:obj}.queue(${2:name}${3:, newQueue})
snippet queuee
	$.queue(${1:element}${2:, name}${3:, newQueue})
snippet ready
	$(function () {
		${0}
	});
snippet rem
	${1:obj}.remove()
snippet rema
	${1:obj}.removeAttr('${2:attribute name}')
snippet remc
	${1:obj}.removeClass('${2:class name}')
snippet remd
	${1:obj}.removeData('${2:key name}')
snippet remdd
	$.removeData(${1:element}${2:, 'key name}')
snippet remp
	${1:obj}.removeProp('${2:property name}')
snippet repa
	${1:obj}.replaceAll(${2:target})
snippet repw
	${1:obj}.replaceWith(${2:content})
snippet reset
	${1:obj}.reset(function (${2:e}) {
		${0:// event handler}
	});
snippet resize
	${1:obj}.resize(function (${2:e}) {
		${0:// event handler}
	});
snippet scroll
	${1:obj}.scroll(function (${2:e}) {
		${0:// event handler}
	});
snippet scrolll
	${1:obj}.scrollLeft(${2:value})
snippet scrollt
	${1:obj}.scrollTop(${2:value})
snippet sdown
	${1:obj}.slideDown('${2:slow/400/fast}')
snippet sdownc
	${1:obj}.slideDown('${2:slow/400/fast}', function () {
		${0:// callback};
	});
snippet select
	${1:obj}.select(function (${2:e}) {
		${0:// event handler}
	});
snippet serialize
	${1:obj}.serialize()
snippet serializea
	${1:obj}.serializeArray()
snippet show
	${1:obj}.show('${2:slow/400/fast}')
snippet showc
	${1:obj}.show('${2:slow/400/fast}', function () {
		${0:// callback}
	});
snippet sib
	${1:obj}.siblings('${2:selector expression}')
snippet size
	${1:obj}.size()
snippet slice
	${1:obj}.slice(${2:start}${3:, end})
snippet stoggle
	${1:obj}.slideToggle('${2:slow/400/fast}')
snippet stop
	${1:obj}.stop('${2:queue}', ${3:false}, ${4:false})
snippet submit
	${1:obj}.submit(function (${2:e}) {
		${0:// event handler}
	});
snippet sup
	${1:obj}.slideUp('${2:slow/400/fast}')
snippet supc
	${1:obj}.slideUp('${2:slow/400/fast}', function () {
		${0:// callback};
	});
snippet text
	${1:obj}.text(${2:'some text'})
snippet toarr
	${0:obj}.toArray()
snippet tog
	${1:obj}.toggle(function (${2:e}) {
		${3:// event handler}
	}, function ($2) {
		${4:// event handler}
	});
	${0}
snippet togclass
	${1:obj}.toggleClass('${2:class name}')
snippet togsh
	${1:obj}.toggle('${2:slow/400/fast}')
snippet trig
	${1:obj}.trigger('${2:event name}')
snippet trigh
	${1:obj}.triggerHandler('${2:event name}')
snippet $trim
	$.trim(${1:str})
snippet $type
	$.type(${1:obj})
snippet unbind
	${1:obj}.unbind('${2:event name}')
snippet undele
	${1:obj}.undelegate(${2:selector expression}, ${3:event}, ${4:handler})
snippet uniq
	$.unique(${1:array})
snippet unload
	${1:obj}.unload(function (${2:e}) {
		${0:// event handler}
	});
snippet unwrap
	${1:obj}.unwrap()
snippet val
	${1:obj}.val('${2:text}')
snippet width
	${1:obj}.width(${2:integer})
snippet wrap
	${1:obj}.wrap('${2:&lt;div class="extra-wrapper"&gt;&lt;/div&gt;}')
snippet for
	for (var i = 0; i < ${1:data}.length; i++) {
		${2}
	}${3}
snippet @if
	@if( ${1} )
		${2}
	@endif${3}
snippet @fore
	@foreach($${1} as $${2})	
		${3}
	@endforeach
	${4}
snippet yajra-action
	{!! Form::model($model, ['url' => $form_url, 'method' => 'delete', 'class' => 'form-inline js-confirm', 'data-confirm' => $confirm_message] ) !!}
		<a href="{{ $edit_url }}">Ubah</a> |
		{!! Form::submit('Hapus', ['class'=>'btn btn-xs btn-danger']) !!}
	{!! Form::close()!!}

snippet Form-text
	{!! Form::${1:text}(${2}, ${3:null}, ['class' => 'form-control${4}']) !!}${5}
snippet HTML-s
	{!! HTML::script('js/${1}.js')!!}
	${2}

snippet basic "basic blade template"
	@extends('layout.master')

	@section('title') 
	Klinik Jati Elok | ${1}

	@stop
	@section('page-title') 
	<h2>$1</h2>
	<ol class="breadcrumb">
		  <li>
			  <a href="{{ url('laporans')}}">Home</a>
		  </li>
		  <li class="active">
			  <strong>$1</strong>
		  </li>
	</ol>

	@stop
	@section('content') 
		${2}
	@stop
	@section('footer') 
		
	@stop

snippet func "javascript function"
	function ${1}(){
		 ${2}
	}
	${3}

snippet input-group "bootstrap 3 input-group"
	<div class="input-group">
		<input type="text" class="form-control " id="${1}" placeholder="" autocomplete='off' value=""/>
		<span class="input-group-addon">${2}</span>
	</div>
	${3}

snippet Form "blade form open"
	{!! Form::open(['url' => '${1}', 'method' => '${2}']) !!}
		${3}
	{!! Form::close() !!}

snippet form-submit "Laravel Blade Submit Form-group"
	<div class="form-group">
	  {!! Form::submit('submit', ['class' => 'btn btn-success btn-block btn-lg']) !!}
	</div> ${1}
snippet Form-file 
	<div class="form-group{{ $errors->has('$1') ? ' has-error' : '' }}">
		{!! Form::label('${1}', '${2}') !!}
		{!! Form::file('$1') !!}
			@if (isset($${3}) && $$3->$1)
				<p> {!! HTML::image(asset('${4:root directory}/'.$$3->$1), null, ['class'=>'img-rounded upload']) !!} </p>
			@else
				<p> {!! HTML::image(asset('img/photo_not_available.png'), null, ['class'=>'img-rounded upload']) !!} </p>
			@endif
		{!! $errors->first('$1', '<p class="help-block">:message</p>') !!}
	</div>
snippet table-responsive
	<div class="table-responsive">
		${1}
	</div>
snippet paginate
	<?php echo $${1}->appends(Input::except('page'))->links(); ?>
